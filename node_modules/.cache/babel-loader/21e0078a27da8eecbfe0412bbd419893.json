{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UnitA\\\\Projects\\\\Talculator\\\\src\\\\App.js\";\nimport React from 'react';\nimport './index.css';\nimport Buttons from './Components/Buttons';\nimport Display from './Components/Display';\nlet ceRegex = new RegExp(/\\d+$|(\\d+[\\+x\\/-])$/);\nlet opRegex = new RegExp(/[+x\\/-]$/);\nlet evalRegex = new RegExp(/[+*\\/-]+$/);\nlet decRegex = new RegExp(/\\./);\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      prevValue: '0',\n      formula: '',\n      sign: '+',\n      last: '',\n      output: '',\n      evald: false,\n      maxChars: 17,\n      outputSize: 3.2\n    };\n    this.handleNumbers = this.handleNumbers.bind(this);\n    this.handleSign = this.handleSign.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleEval = this.handleEval.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  reset() {\n    this.setState({\n      value: '',\n      prevValue: '0',\n      formula: '',\n      sign: '+',\n      last: '',\n      output: '',\n      evald: false\n    });\n  }\n\n  getFontSize(str) {\n    switch (true) {\n      case str.length > this.state.maxChars:\n        return 0;\n\n      case str.length === 9:\n        return 3.1;\n\n      case str.length === 10:\n        return 2.75;\n\n      case str.length === 11:\n        return 2.5;\n\n      case str.length === 12:\n        return 2.35;\n\n      case str.length === 13:\n        return 2.15;\n\n      case str.length === 14:\n        return 2.05;\n\n      case str.length === 15:\n        return 1.85;\n\n      case str.length === 16:\n        return 1.70;\n\n      case str.length === 17:\n        return 1.6;\n\n      default:\n        return 3.2;\n    }\n  }\n\n  handleNumbers(e) {\n    var value = this.state.value;\n    var output;\n\n    if (!this.state.evald) {\n      if (value.length < this.state.maxChars) {\n        value += e.target.value;\n        output = parseFloat(value);\n        var size = this.getFontSize(value.toLocaleString());\n        this.setState({\n          value: value,\n          output: output.toLocaleString(),\n          outputSize: size\n        });\n\n        if (size === '0') {\n          this.setState({\n            prevValue: '0',\n            formula: '',\n            sign: '+',\n            last: '',\n            output: '',\n            evald: false,\n            outputSize: 3.2\n          });\n        }\n      }\n    } else {\n      this.setState({\n        value: e.target.value,\n        prevValue: '0',\n        formula: '',\n        sign: '+',\n        last: '',\n        output: '',\n        evald: false\n      });\n    }\n  }\n\n  handleSign(e) {\n    var value = this.state.output;\n\n    if (value[0] === '-') {\n      this.setState({\n        value: value.substr(1),\n        output: value.substr(1).toLocaleString()\n      });\n    } else {\n      this.setState({\n        value: '-' + value,\n        output: '-' + value.toLocaleString()\n      });\n    }\n  }\n\n  handleDecimal(e) {\n    var value = this.state.value;\n    var output = this.state.output;\n\n    if (!this.state.evald) {\n      if (!this.state.value.match(decRegex) && value.length < this.state.maxChars) {\n        value += e.target.value;\n        output = parseFloat(value);\n        var size = this.getFontSize(value.toLocaleString());\n        this.setState({\n          value: value,\n          output: output.toLocaleString() + '.',\n          outputSize: size\n        });\n\n        if (size === '0') {\n          this.setState({\n            prevValue: '0',\n            formula: '',\n            sign: '+',\n            last: '',\n            output: '',\n            evald: false,\n            outputSize: 3.2\n          });\n        }\n      }\n    } else {\n      this.setState({\n        value: e.target.value,\n        prevValue: '0',\n        formula: '',\n        sign: '+',\n        last: '',\n        output: '',\n        evald: false\n      });\n    }\n  }\n\n  handleOperator(e) {\n    var value = this.state.value;\n    var formula = this.state.formula;\n\n    if (!formula.match(opRegex) || value !== '') {\n      value += e.target.value;\n    }\n\n    if (!this.state.evald) {\n      this.setState({\n        prevValue: value,\n        value: '',\n        output: '',\n        formula: formula + value.replace('±', '')\n      });\n    } else {\n      this.setState({\n        prevValue: '',\n        value: '',\n        formula: formula + e.target.value.replace(',', '').replace('±', ''),\n        evald: false\n      });\n    }\n  }\n\n  handleEval(e) {\n    var value = this.state.value;\n    var formula = this.state.formula;\n\n    if (!this.state.evald) {\n      if (this.state.value !== '') {\n        this.setState({\n          //value: '',\n          formula: formula += value\n        });\n        formula = formula.replace('x', '*');\n        formula = formula.replace(evalRegex, '');\n\n        try {\n          var answer = Math.round(100000000 * eval(formula)) / 100000000;\n          this.setState({\n            value: answer,\n            output: answer.toLocaleString(),\n            evald: true,\n            outputSize: this.getFontSize(answer.toString())\n          });\n        } catch (e) {\n          this.setState({\n            value: '',\n            output: 'ERROR',\n            formula: '',\n            evald: true\n          });\n          setTimeout(this.reset, 2000);\n        }\n      }\n    }\n  }\n\n  handleClear(e) {\n    if (e.target.value === \"AC\") {\n      this.reset();\n    } else if (e.target.value === \"CE\") {\n      this.setState({\n        formula: this.state.formula.replace(ceRegex, '').replace('±', '')\n      });\n      console.log(this.state.formula);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, \"Talculator 1.0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      outputSize: this.state.outputSize,\n      formula: this.state.formula,\n      value: this.state.output,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Buttons, {\n      handleNum: this.handleNumbers,\n      handleSign: this.handleSign,\n      handleOp: this.handleOperator,\n      handleEval: this.handleEval,\n      handleClr: this.handleClear,\n      handleDec: this.handleDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 12\n      }\n    }, \"by \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://johndarke.net/home.php\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 35\n      }\n    }, \"John Darke\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/UnitA/Projects/Talculator/src/App.js"],"names":["React","Buttons","Display","ceRegex","RegExp","opRegex","evalRegex","decRegex","App","Component","constructor","props","state","value","prevValue","formula","sign","last","output","evald","maxChars","outputSize","handleNumbers","bind","handleSign","handleOperator","handleEval","handleClear","handleDecimal","reset","setState","getFontSize","str","length","e","target","parseFloat","size","toLocaleString","substr","match","replace","answer","Math","round","eval","toString","setTimeout","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport Buttons from './Components/Buttons'\r\nimport Display from './Components/Display'\r\n\r\nlet ceRegex = new RegExp(/\\d+$|(\\d+[\\+x\\/-])$/);\r\nlet opRegex = new RegExp(/[+x\\/-]$/);\r\nlet evalRegex = new RegExp(/[+*\\/-]+$/);\r\nlet decRegex = new RegExp(/\\./);\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        value: '',\r\n        prevValue: '0',\r\n        formula: '',\r\n        sign: '+',\r\n        last: '',\r\n        output: '',\r\n        evald: false,\r\n        maxChars: 17,\r\n        outputSize: 3.2\r\n    };\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n    this.handleSign = this.handleSign.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleEval = this.handleEval.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n  \r\n  reset() {\r\n    this.setState({\r\n        value: '',\r\n        prevValue: '0',\r\n        formula: '',\r\n        sign: '+',\r\n        last: '',\r\n        output: '',\r\n        evald: false\r\n    });\r\n  }\r\n  \r\n  getFontSize(str) {\r\n    switch(true) {\r\n      case (str.length > this.state.maxChars):\r\n        return 0;\r\n        \r\n      case (str.length === 9):\r\n        return 3.1;\r\n        \r\n      case (str.length === 10):\r\n        return 2.75;\r\n\r\n      case (str.length === 11):\r\n          return 2.5;  \r\n\r\n      case (str.length === 12):\r\n        return 2.35;\r\n        \r\n      case (str.length === 13):\r\n        return 2.15;\r\n        \r\n      case (str.length === 14):\r\n        return 2.05;\r\n        \r\n      case (str.length === 15):\r\n        return 1.85;\r\n        \r\n      case (str.length === 16):\r\n        return 1.70;\r\n        \r\n      case (str.length === 17):\r\n        return 1.6;\r\n        \r\n      default:\r\n        return 3.2;\r\n    }\r\n  }\r\n\r\n  handleNumbers(e) {\r\n      var value = this.state.value;\r\n      var output;\r\n    \r\n      if (!this.state.evald) {\r\n        if (value.length < this.state.maxChars) {\r\n          value += e.target.value;\r\n          output = parseFloat(value);\r\n          var size = this.getFontSize(value.toLocaleString());\r\n\r\n          this.setState({\r\n            value: value,\r\n            output: output.toLocaleString(),\r\n            outputSize: size\r\n          });\r\n          if (size === '0') {\r\n            this.setState({\r\n              prevValue: '0',\r\n              formula: '',\r\n              sign: '+',\r\n              last: '',\r\n              output: '',\r\n              evald: false,\r\n              outputSize: 3.2\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n          this.setState({\r\n            value: e.target.value,\r\n            prevValue: '0',\r\n            formula: '',\r\n            sign: '+',\r\n            last: '',\r\n            output: '',\r\n            evald: false\r\n          });\r\n      }\r\n  }\r\n  \r\n  handleSign(e) {\r\n    var value = this.state.output;\r\n    if (value[0] === '-') {\r\n      this.setState({\r\n        value: value.substr(1),\r\n        output: value.substr(1).toLocaleString()\r\n      })\r\n    } else {\r\n      this.setState({\r\n        value: '-' + value,\r\n        output: '-' + value.toLocaleString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDecimal(e) {\r\n    var value = this.state.value;\r\n    var output = this.state.output; \r\n      if (!this.state.evald) {\r\n        if (!this.state.value.match(decRegex) && value.length < this.state.maxChars) {\r\n          value += e.target.value;\r\n          output = parseFloat(value);\r\n          var size = this.getFontSize(value.toLocaleString());\r\n          this.setState({\r\n            value: value,\r\n            output: output.toLocaleString() + '.',\r\n            outputSize: size\r\n          });\r\n          if (size === '0') {\r\n            this.setState({\r\n              prevValue: '0',\r\n              formula: '',\r\n              sign: '+',\r\n              last: '',\r\n              output: '',\r\n              evald: false,\r\n              outputSize: 3.2\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n          this.setState({\r\n            value: e.target.value,\r\n            prevValue: '0',\r\n            formula: '',\r\n            sign: '+',\r\n            last: '',\r\n            output: '',\r\n            evald: false\r\n          });\r\n      }\r\n  }\r\n  \r\n  handleOperator(e) {\r\n    var value = this.state.value \r\n    var formula = this.state.formula\r\n    if (!formula.match(opRegex) || value !== '') {\r\n      value += e.target.value;\r\n    }\r\n      \r\n    if (!this.state.evald) {\r\n      this.setState({\r\n        prevValue: value,\r\n        value: '',\r\n        output: '',\r\n        formula: formula + value.replace('±','')\r\n      });\r\n    } else {\r\n        this.setState({\r\n          prevValue: '',\r\n          value: '',\r\n          formula: formula + e.target.value.replace(',','').replace('±',''),\r\n          evald: false\r\n        });\r\n    }\r\n  }\r\n  \r\n  handleEval(e) {\r\n    var value = this.state.value;\r\n    var formula = this.state.formula;\r\n    \r\n    if (!this.state.evald) {\r\n      if (this.state.value !== '') {\r\n        this.setState({\r\n           //value: '',\r\n           formula: formula += value\r\n        });\r\n      \r\n        formula = formula.replace('x', '*');\r\n        formula = formula.replace(evalRegex, '');\r\n        \r\n        try {\r\n          var answer = Math.round(100000000 * eval(formula)) / 100000000;\r\n        \r\n            this.setState({\r\n              value: answer,\r\n              output: answer.toLocaleString(),\r\n              evald: true,\r\n              outputSize: this.getFontSize(answer.toString())    \r\n            \r\n            });\r\n        } catch (e) {\r\n          this.setState({\r\n            value: '',\r\n            output: 'ERROR',\r\n            formula: '',\r\n            evald: true\r\n        });\r\n        setTimeout(this.reset, 2000)\r\n        }\r\n      }\r\n    }   \r\n  }\r\n  \r\n  handleClear(e) {\r\n    if (e.target.value === \"AC\") {\r\n      this.reset();\r\n    } else if(e.target.value === \"CE\") {\r\n      this.setState({\r\n        formula: this.state.formula.replace(ceRegex, '').replace('±','')\r\n      });\r\n      console.log(this.state.formula)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return ( \r\n        <div class=\"container\">\r\n          <h1 class=\"title\">Talculator 1.0</h1>\r\n          <div className=\"calculator\">\r\n            <Display \r\n              outputSize={this.state.outputSize}\r\n              formula={this.state.formula} \r\n              value={this.state.output} \r\n            />\r\n            \r\n            <Buttons \r\n              handleNum={this.handleNumbers}\r\n              handleSign={this.handleSign}\r\n              handleOp={this.handleOperator}\r\n              handleEval={this.handleEval}\r\n              handleClr={this.handleClear}\r\n              handleDec={this.handleDecimal}/>\r\n          </div>\r\n           <div class=\"author\">by <a href=\"https://johndarke.net/home.php\">John Darke</a></div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}